var crypto = require('crypto');
var rand = require('csprng');
var mongoose = require('mongoose');
var gravatar = require('gravatar');
var mod = require('config/models');
var MongoClient = require('mongodb').MongoClient, assert = require('assert');
var url = 'mongodb://mptdn:mptdn@ds027719.mlab.com:27719/parcautobdd';	

exports.sinscrire = function(email,password,callback) {
		MongoClient.connect(url, function(err, db) {
			
				var x = email;
				//if(!(x.indexOf("@")<1 || x.lastIndexOf(".")<x.indexOf("@")+2 || x.lastIndexOf(".")+2>=x.length)){
				//if (password.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/) && password.length > 4 && password.match(/[0-9]/) && password.match(/.[!,@,#,$,%,^,&,*,?,_,~]/)) {
				var temp =rand(160, 36);
				var newpass = temp + password;
				var token = crypto.createHash('sha512').update(email +rand).digest("hex");
				var hashed_password = crypto.createHash('sha512').update(newpass).digest("hex");

				
				db.collection("users").insert({email: email, password:password},function(err,users){

				var len = users.length;
				//console.log(len);
				if(len == 0){
				 /*	newuser.save(function (err) {
					
					callback({'response':"Sucessfully Registered"});
						
				});
				}else{

					callback({'response':"Email already Registered"});

				};*/
				console.log({'response':"oui"});
				}
				else console.log(len);
				});

				

			});
	}

